" ------ load plugins ------
if filereadable(expand("~/.vimrc.plugins"))
  source ~/.vimrc.plugins
endif

" ------ sensible defaults ------
let mapleader = "\<Space>"
set hlsearch
set incsearch
set number
set noswapfile
set hidden
set wrap!
set splitbelow splitright
set clipboard=unnamedplus
set visualbell
set mouse=a
" set lazyredraw
if has('mouse_sgr')
    set ttymouse=sgr
endif
set wildmode=longest,list,full
set noshowcmd noruler
set nomousehide

" ------ extra config ------
syntax on
filetype plugin indent on

" disable highlighting
set synmaxcol=120
syntax sync minlines=200

" move lines of code vertically
vnoremap < <gv
vnoremap > >gv

" navegate foward and backwards
map q :bp<cr>
map w :bn<cr>

" go to line
:nnoremap <CR> G

" Enable Ctrlc and CtrlV for vim (requires gvim)
vnoremap <C-c> "*y :let @+=@*<CR>
map <C-v> "+P

" splits
noremap <silent> <A-v> :vsplit<CR>
map <silent> <A-h> :split<CR>

" ctrl + s to save files
noremap <silent> <C-S> :update<CR>
vnoremap <silent> <C-S>         <C-C>:update<CR>
inoremap <silent> <C-S>        <esc><C-O>:update<CR>

if !has('nvim')
  if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\e[5 q\<Esc>\\"
    let &t_SR = "\<Esc>Ptmux;\<Esc>\e[4 q\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\e[2 q\<Esc>\\"
  else
    let &t_SI = "\e[6 q"
    let &t_SR = "\e[4 q"
    let &t_EI = "\e[2 q"
  endif
endif

" trailing white space
autocmd BufWritePre * %s/\s\+$//e

 " when quitting a file, save the cursor position
augroup save_cursor_position
    autocmd!
    autocmd BufReadPost * call setpos(".", getpos("'\""))
augroup END

 " enable cursorline in the currently active window
augroup cursorline
    autocmd!
    autocmd VimEnter,WinEnter,BufWinEnter * setlocal cursorline
    autocmd WinLeave * setlocal nocursorline
augroup END

" File information
com! RelativePath let @+=expand("%")
com! AbsolutePath let @+=expand("%:p")
com! FileName let @+=expand("%:t")
com! PathName let @+=expand("%:p:h")

" Json things
com! FormatJSON :%!jq '.'
com! MinifyJSON :%!jq -c

" Command to reload vim
com! RVimRc :source ~/.vimrc

" start vim at insert mode when commiting
au FileType gitcommit 1 | startinsert
